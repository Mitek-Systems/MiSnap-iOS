// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MiSnapNFCUX
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AudioToolbox
import MiSnapAssetManager
import MiSnapCore
import MiSnapNFC
@_exported import MiSnapNFCUX
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc public protocol MiSnapNFCViewControllerDelegate {
  @objc func miSnapNfcLicenseStatus(_ status: MiSnapLicenseStatus)
  @objc func miSnapNfcSuccess(_ result: [Swift.String : Any])
  @objc func miSnapNfcCancelled(_ result: [Swift.String : Any])
  @objc func miSnapNfcSkipped(_ result: [Swift.String : Any])
  @objc optional func miSnapNfcShouldBeDismissed()
}
@_hasMissingDesignatedInitializers @available(iOS 13, *)
@objc @_Concurrency.MainActor(unsafe) public class MiSnapNFCViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) weak public var delegate: (any MiSnapNFCViewControllerDelegate)?
  @objc @_Concurrency.MainActor(unsafe) public init(with configuration: MiSnapNFCConfiguration, delegate: any MiSnapNFCViewControllerDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var prefersStatusBarHidden: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapNFCConfiguration : ObjectiveC.NSObject {
  @objc public func withInputs(completion: (MiSnapNFCInputs) -> Swift.Void) -> MiSnapNFCConfiguration
  @objc public func withCustomParameters(completion: (MiSnapNFCParameters) -> Swift.Void) -> MiSnapNFCConfiguration
  @objc public func withCustomUxParameters(completion: (MiSnapNFCUxParameters) -> Swift.Void) -> MiSnapNFCConfiguration
  @objc public func withCustomLocalization(completion: (MiSnapNFCLocalizationConfiguration) -> Swift.Void) -> MiSnapNFCConfiguration
  @objc public func withCustomAssetLocation(completion: (MiSnapNFCAssetLocationConfiguration) -> Swift.Void) -> MiSnapNFCConfiguration
  @objc public func withCustomScan(completion: (MiSnapNFCScanConfiguration) -> Swift.Void) -> MiSnapNFCConfiguration
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapNFCScanConfiguration : ObjectiveC.NSObject {
  @objc public var backgroundColor: UIKit.UIColor
  @objc public var backgroundColorDarkMode: UIKit.UIColor?
  @objc public var message: MiSnapLabelConfiguration
  @objc public var failureMessage: MiSnapLabelConfiguration
  @objc public var buttons: MiSnapNFCScanButtonsConfiguration
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapNFCScanButtonsConfiguration : ObjectiveC.NSObject {
  @objc public var barColor: UIKit.UIColor
  @objc public var proceed: MiSnapLabelConfiguration
  @objc public var cancel: MiSnapLabelConfiguration
  @objc public var skip: MiSnapLabelConfiguration
  @objc override dynamic public init()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapNFCInstructionConfiguration : ObjectiveC.NSObject {
  @objc public var device: UIKit.UIImage?
  @objc public var id: UIKit.UIImage?
  @objc public var passport: UIKit.UIImage?
  @objc public var target: UIKit.UIImage?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapNFCUxParameters : ObjectiveC.NSObject {
  @objc public var autoDismiss: Swift.Bool
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
