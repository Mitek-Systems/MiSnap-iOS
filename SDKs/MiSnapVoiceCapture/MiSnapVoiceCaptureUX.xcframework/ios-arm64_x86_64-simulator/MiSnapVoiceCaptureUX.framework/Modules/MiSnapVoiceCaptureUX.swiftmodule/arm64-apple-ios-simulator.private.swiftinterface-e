// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MiSnapVoiceCaptureUX
// swift-module-flags-ignorable: -enable-bare-slash-regex
import MiSnapAssetManager
import MiSnapVoiceCapture
@_exported import MiSnapVoiceCaptureUX
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCaptureConfiguration : ObjectiveC.NSObject {
  @objc public var parameters: MiSnapVoiceCaptureParameters {
    get
  }
  @objc public var uxParameters: MiSnapVoiceCaptureUXParameters {
    get
  }
  @objc public var phraseSelection: MiSnapVoiceCapturePhraseSelectionConfiguration {
    get
  }
  @objc public var introductoryInstruction: MiSnapVoiceCaptureIntroductoryInstructionConfiguration {
    get
  }
  @objc public var recording: MiSnapVoiceCaptureRecordingConfiguration {
    get
  }
  @objc override dynamic public init()
  @objc public init(for flow: MiSnapVoiceCaptureFlow, phrase: Swift.String? = nil)
  @objc public func withCustomParameters(completion: (MiSnapVoiceCaptureParameters) -> Swift.Void) -> MiSnapVoiceCaptureConfiguration
  @objc public func withCustomUxParameters(completion: (MiSnapVoiceCaptureUXParameters) -> Swift.Void) -> MiSnapVoiceCaptureConfiguration
  @objc public func withCustomPhraseSelection(completion: (MiSnapVoiceCapturePhraseSelectionConfiguration) -> Swift.Void) -> MiSnapVoiceCaptureConfiguration
  @objc public func withCustomIntroductoryInstruction(completion: (MiSnapVoiceCaptureIntroductoryInstructionConfiguration) -> Swift.Void) -> MiSnapVoiceCaptureConfiguration
  @objc public func withCustomRecording(completion: (MiSnapVoiceCaptureRecordingConfiguration) -> Swift.Void) -> MiSnapVoiceCaptureConfiguration
  @objc public func withCustomLocalization(completion: (MiSnapVoiceCaptureLocalizationConfiguration) -> Swift.Void) -> MiSnapVoiceCaptureConfiguration
  @objc public func withCustomAssetLocation(completion: (MiSnapVoiceCaptureAssetLocationConfiguration) -> Swift.Void) -> MiSnapVoiceCaptureConfiguration
  @objc public func applying(_ template: MiSnapVoiceCaptureConfiguration) -> MiSnapVoiceCaptureConfiguration
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCapturePhraseSelectionButtonsConfiguration : ObjectiveC.NSObject {
  @objc public var proceed: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc override dynamic public init()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCapturePhraseSelectionConfiguration : ObjectiveC.NSObject {
  @objc public var backgroundColor: UIKit.UIColor
  @objc public var backgroundColorDarkMode: UIKit.UIColor?
  @objc public var message: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc public var phrase: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc public var buttons: MiSnapVoiceCapturePhraseSelectionButtonsConfiguration
  @objc override dynamic public init()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCaptureIntroductoryInstructionButtonsConfiguration : ObjectiveC.NSObject {
  @objc public var proceed: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc override dynamic public init()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCaptureIntroductoryInstructionConfiguration : ObjectiveC.NSObject {
  @objc public var backgroundColor: UIKit.UIColor
  @objc public var backgroundColorDarkMode: UIKit.UIColor?
  @objc public var message: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc public var buttons: MiSnapVoiceCaptureIntroductoryInstructionButtonsConfiguration
  @objc override dynamic public init()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCaptureRecordingButtonsConfiguration : ObjectiveC.NSObject {
  @objc public var cancel: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc public var failureAcknowledgment: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc override dynamic public init()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCaptureRecordingConfiguration : ObjectiveC.NSObject {
  @objc public var backgroundColor: UIKit.UIColor
  @objc public var backgroundColorDarkMode: UIKit.UIColor?
  @objc public var neutral: MiSnapAssetManager.MiSnapVoiceCaptureNeutralViewConfiguration
  @objc public var success: MiSnapAssetManager.MiSnapVoiceCaptureSuccessViewConfiguration
  @objc public var failure: MiSnapAssetManager.MiSnapVoiceCaptureFailureViewConfiguration
  @objc public var message: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc public var phrase: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc public var failureMessage: MiSnapAssetManager.MiSnapLabelConfiguration
  @objc public var buttons: MiSnapVoiceCaptureRecordingButtonsConfiguration
  @objc override dynamic public init()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@objc public class MiSnapVoiceCaptureUXParameters : ObjectiveC.NSObject {
  @objc public var showIntroductoryInstructionScreen: Swift.Bool
  @objc public var autoDismiss: Swift.Bool
  @objc public var phrase: Swift.String? {
    get
  }
  @objc public init(for flow: MiSnapVoiceCaptureFlow, phrase: Swift.String? = nil)
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@objc public protocol MiSnapVoiceCaptureViewControllerDelegate {
  @objc func miSnapVoiceCaptureLicenseStatus(_ status: MiSnapLicenseStatus)
  @objc func miSnapVoiceCaptureDidSelectPhrase(_ phrase: Swift.String)
  @objc func miSnapVoiceCaptureSuccess(_ results: [MiSnapVoiceCaptureResult], for flow: MiSnapVoiceCaptureFlow)
  @objc func miSnapVoiceCaptureCancelled(_ result: MiSnapVoiceCaptureResult)
  @objc func miSnapVoiceCaptureError(_ result: MiSnapVoiceCaptureResult)
  @objc optional func miSnapVoiceCaptureShouldBeDismissed()
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class MiSnapVoiceCaptureViewController : UIKit.UIViewController {
  @objc @_Concurrency.MainActor(unsafe) public var configuration: MiSnapVoiceCaptureConfiguration {
    get
  }
  @objc @_Concurrency.MainActor(unsafe) public init(with configuration: MiSnapVoiceCaptureConfiguration, delegate: any MiSnapVoiceCaptureViewControllerDelegate)
  @objc @_Concurrency.MainActor(unsafe) public static func checkMicrophonePermission(handler: @escaping (Swift.Bool) -> Swift.Void)
  @objc @_Concurrency.MainActor(unsafe) public static func hasMinDiskSpace(_ minDiskSpace: Swift.Int) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var prefersStatusBarHidden: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @objc deinit
}
extension MiSnapVoiceCaptureViewController : MiSnapVoiceCaptureControllerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerLicenseStatus(_ status: MiSnapLicenseStatus)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerDidStart()
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerSuccess(_ result: MiSnapVoiceCaptureResult)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerFailure(_ result: MiSnapVoiceCaptureResult)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerError(_ result: MiSnapVoiceCaptureResult)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerCancel(_ result: MiSnapVoiceCaptureResult)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerInterruptionStarted(_ reason: MiSnapVoiceCaptureControllerInterruptionReason)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerInterruptionEnded()
  @_Concurrency.MainActor(unsafe) @objc dynamic public func miSnapVoiceCaptureControllerSpeechLength(_ speechLength: Swift.Int)
}
extension MiSnapVoiceCaptureViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func traitCollectionDidChange(_ previousTraitCollection: UIKit.UITraitCollection?)
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCaptureLocalizationConfiguration : ObjectiveC.NSObject {
  @objc public var bundle: Foundation.Bundle
  @objc public var stringsName: Swift.String
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class MiSnapVoiceCaptureAssetLocationConfiguration : ObjectiveC.NSObject {
  @objc public var bundle: Foundation.Bundle
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
